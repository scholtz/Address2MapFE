apiVersion: v1
kind: Namespace
metadata:
  name: address2map
---
apiVersion: apps/v1 
kind: Deployment
metadata:
  name: address2map-fe-deployment
  namespace: address2map
spec:
  selector:
    matchLabels:
      app: address2map-fe
  replicas: 1
  template:
    metadata:
      labels:
        app: address2map-fe
    spec:
      imagePullSecrets:
      - name: regcred
      containers:
        - name: address2map-fe
          image: scholtz2/address2mapfe:1.2022.10.08
          imagePullPolicy: Always
          ports:
            - containerPort: 8080
              protocol: TCP
          readinessProbe:
            tcpSocket:
              port: 8080
            initialDelaySeconds: 10
            timeoutSeconds: 5  
            failureThreshold: 2
          livenessProbe:
            tcpSocket:
              port: 8080
            initialDelaySeconds: 20
            timeoutSeconds: 5  
            failureThreshold: 2
            terminationGracePeriodSeconds: 1
          #command: ["/bin/sh", "-ec", "while :; do date; sleep 60 ; done"]
          env:
          - name: APPLICATION_ENV
            value: "main"
---
apiVersion: v1
kind: Service
metadata:
  name: address2mapfe-service
  namespace: address2map
spec:
  type: ClusterIP
  selector:
    app: address2map-fe
  ports:
    - name: http
      protocol: TCP
      appProtocol: http
      port: 8080
      targetPort: 8080

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: address2map-fe-ingress-h1
  namespace: address2map
  annotations: 
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
    cert-manager.io/cluster-issuer: letsencrypt
spec:
  tls:
  - hosts:
    - address2mapfe.h1.scholtz.sk
    secretName: tls-address2mapfe
  rules:
  - host: address2mapfe.h1.scholtz.sk
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: address2mapfe-service
            port:
              number: 8080

              
              
